# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ./vendor/googletest/googletest

# Where to find user code.
USER_DIR = .

# Where to find compiled artifacts
TARGET_DIR = ./target

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = $(TARGET_DIR)/Flourish_test $(TARGET_DIR)/Pulse_test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

test: $(TARGET_DIR)/test
	$(TARGET_DIR)/test

Flourish_test: $(TARGET_DIR)/Flourish_test
	$(TARGET_DIR)/Flourish_test

Pulse_test: $(TARGET_DIR)/Pulse_test
	$(TARGET_DIR)/Pulse_test

clean :
	rm -rf $(TARGET_DIR)/*

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
$(TARGET_DIR)/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
						$(GTEST_DIR)/src/gtest-all.cc -o $@

$(TARGET_DIR)/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
						$(GTEST_DIR)/src/gtest_main.cc -o $@

$(TARGET_DIR)/gtest_main.a : $(TARGET_DIR)/gtest-all.o $(TARGET_DIR)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

$(TARGET_DIR)/Flourish.o : $(USER_DIR)/Flourish.cpp $(USER_DIR)/Flourish.h \
							$(USER_DIR)/Led.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/Flourish.cpp -o $@

$(TARGET_DIR)/Flourish_test.o : $(USER_DIR)/test/Flourish_test.cpp \
							$(USER_DIR)/Flourish.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/test/Flourish_test.cpp -o $@

$(TARGET_DIR)/Flourish_test : $(TARGET_DIR)/Flourish.o $(TARGET_DIR)/Flourish_test.o $(TARGET_DIR)/Led.o $(TARGET_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

$(TARGET_DIR)/Led.o: $(USER_DIR)/Led.cpp $(USER_DIR)/Led.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/Led.cpp -o $@

$(TARGET_DIR)/Pulse.o : $(USER_DIR)/Pulse.cpp $(USER_DIR)/Pulse.h \
							$(USER_DIR)/Led.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/Pulse.cpp -o $@

$(TARGET_DIR)/Pulse_test.o : $(USER_DIR)/test/Pulse_test.cpp \
							$(USER_DIR)/Pulse.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/test/Pulse_test.cpp -o $@

$(TARGET_DIR)/Pulse_test : $(TARGET_DIR)/Pulse.o $(TARGET_DIR)/Pulse_test.o $(TARGET_DIR)/Led.o $(TARGET_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

$(TARGET_DIR)/test : $(TARGET_DIR)/Flourish.o $(TARGET_DIR)/Flourish_test.o \
										 $(TARGET_DIR)/Pulse.o $(TARGET_DIR)/Pulse_test.o $(TARGET_DIR)/Led.o \
										 $(TARGET_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
